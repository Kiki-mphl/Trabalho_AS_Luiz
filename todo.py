def adicionar_tarefa(tarefas, descricao):
    """Adiciona uma nova tarefa √† lista com prioridade."""
    if descricao != "":
        print("Escolha a prioridade da tarefa:")
        print("1. Alta")
        print("2. M√©dia")
        print("3. Baixa")
        prioridade = input("Digite o n√∫mero da prioridade: ")

    if prioridade == "1":
            prioridade_texto = "Alta"
        elif prioridade == "2":
            prioridade_texto = "M√©dia"
        elif prioridade == "3":
            prioridade_texto = "Baixa"
        else:
            prioridade_texto = "Baixa"

        nova_tarefa = {
            "descricao": descricao,
            "concluida": False,
            "prioridade": prioridade_texto
        }

def marcar_como_concluida(tarefas, indice): 
    """Marca uma tarefa como conclu√≠da com base no seu √≠ndice na lista."""
    # O √≠ndice do usu√°rio come√ßa em 1, mas o da lista em 0
    indice_real = indice - 1
    if 0 <= indice_real < len(tarefas):
        if tarefas[indice_real]["concluida"]:
            print(f"\n‚ö†Ô∏è A tarefa '{tarefas[indice_real]['descricao']}' j√° estava marcada como conclu√≠da.")
        else:
            tarefas[indice_real]["concluida"] = True
            print(f"\n‚úÖ Tarefa '{tarefas[indice_real]['descricao']}' marcada como conclu√≠da!")
    else:
        print("\n‚ùå √çndice inv√°lido. Por favor, escolha um n√∫mero da lista.")

def remover_tarefa(tarefas, indice):
    """Remove uma tarefa da lista com base no seu √≠ndice."""
    indice_real = indice - 1
    if 0 <= indice_real < len(tarefas):
        tarefa_removida = tarefas.pop(indice_real)
        print(f"\nüóëÔ∏è Tarefa '{tarefa_removida['descricao']}' removida com sucesso!")
    else:
        print("\n‚ùå √çndice inv√°lido. Por favor, escolha um n√∫mero da lista.")

def exibir_menu():
    """Exibe o menu de op√ß√µes para o usu√°rio."""
    print("\n--- MENU ---")
    print("1. Adicionar Tarefa")
    print("2. Listar Tarefas")
    print("3. Marcar Tarefa como Conclu√≠da")
    print("4. Remover Tarefa")
    print("0. Sair")

def main():
    """Fun√ß√£o principal que executa o loop do programa."""
    # A lista de tarefas (nosso vetor) √© criada vazia aqui.
    # Ela existir√° apenas enquanto o programa estiver em execu√ß√£o.
    lista_de_tarefas = []

    while True:
        exibir_menu()
        escolha = input("Escolha uma op√ß√£o: ")

        if escolha == '1':
            descricao = input("Digite a descri√ß√£o da nova tarefa: ")
            adicionar_tarefa(lista_de_tarefas, descricao)
        elif escolha == '2':
            listar_tarefas(lista_de_tarefas)
        elif escolha == '3':
            listar_tarefas(lista_de_tarefas)
            try:
                indice = int(input("Digite o n√∫mero da tarefa para marcar como conclu√≠da: "))
                marcar_como_concluida(lista_de_tarefas, indice)
            except ValueError:
                print("\n‚ùå Entrada inv√°lida. Por favor, digite um n√∫mero.")
        elif escolha == '4':
            listar_tarefas(lista_de_tarefas)
            try:
                indice = int(input("Digite o n√∫mero da tarefa para remover: "))
                remover_tarefa(lista_de_tarefas, indice)
            except ValueError:
                print("\n‚ùå Entrada inv√°lida. Por favor, digite um n√∫mero.")
        elif escolha == '0':
            print("\nObrigado por usar o Gerenciador de Tarefas. At√© mais!")
            break
        else:
            print("\n‚ùå Op√ß√£o inv√°lida. Por favor, tente novamente.")

# Garante que a fun√ß√£o main() s√≥ ser√° executada quando o script for rodado diretamente
if __name__ == "__main__":
    main()